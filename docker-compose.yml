version: '3'

services:
    apache: 
        image: ubuntu/apache2:latest
        container_name: "${APP_NAME}_apache"
        ports:
            - "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
            - "${HOST_MACHINE_SECURE_HOST_PORT}:443"
        environment:
            APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
            XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - .:/var/www/
            - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
            - ${VHOSTS_DIR-./config/vhosts/default.conf}:/etc/apache2/sites-enabled
            - ${LOG_DIR-./logs/apache2}:/var/log/apache2
            - ${XDEBUG_LOG_DIR-./logs/xdebug}:/var/log/xdebug
        networks:
            - "${NETWORK}"

    php:
        build:
            args:
                user: "${USER}"
                uid: "{USER_ID}"
            context: ./docker
            dockerfile: Dockerfile
        image: php:8.2
        container_name: "${APP_NAME}_php"
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: php
            SERVICE_TAGS: cloud
        ports:
            - "${HOST_PHP_PORT}:9000"
        working_dir: "${APACHE_DOCUMENT_ROOT}"
        networks:
            - "${NETWORK}"
        volumes:
            - ./:/var/www
            - ${MYPHP_VOLUME}:/usr/local/etc/php/conf.d/local.ini

    database: 
        image: mysql
        container_name: "${APP_NAME}_database"
        restart: "always"
        ports:
            - "127.0.0.1:${DB_PORT}:3306"
        environment:
            MYSQL_CONNECTION: ${DB_CONNECTION}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ${DB_VOLUME}:/var/lib/mysql/
            - ${MYSQL_VOLUME}:/etc/mysql/mysql.cnf
        networks:
            - ${NETWORK}

networks:
  "${NETWORK}":
    driver: ${NETWORK_DRIVER}

volumes:
  "${DB_VOLUME}":
    driver: l${VOLUME_DRIVER}